
# 实验6：地址映射与共享

一. 用Bochs调试工具跟踪Linux 0.11的地址翻译（地址映射）过程，了解IA-32和Linux 0.11的内存管理机制;

	1. 终端，输入命令 "./dbg-asm"

	2. 终端，输入命令 "c"	//表示继续运行，查看Bochs，可以看到已进入正常状态

	3. 在Bochs里，编译test.c，输入命令”gcc -o test test.c“，运行编译后的文件”./test“

	4. 终端，按”Ctrl + c“，暂停

	5. 终端 输入命令，”n“, 直至下一条命令为cmp

	6. 终端 输入命令，”u/7“	
		//显示从当前位置开始7条指令的反汇编代码 这就是test.c中从while开始一直到return的汇编代码  // 

	7. 终端 输入命令，”sreg“	
		//ldtr:s=0x0068, 0x0068 = 0000,0000,0110,1000 (第0-1位：RPL，第2位：0-->全局/1-->局部， 其他：段描述符索引) 
		//表示LDT表存放在GDT表的1101(二进制)=13（十进制）号位置   
		//gdtr:base=0x00005cb8, limit=0x7ff	 --> GDT物理地址

	8. 终端 输入命令，”xp /2w 0x00005cb8 + 13 * 8“	
		//0x00005d20 <bogus+  0>:	0x52d00068	0x000082fd  
		//可以组合出LDT的物理地址：0x00fd52d0
		//ds:s=0x0017, 0x0017 = 0000,0000,0001,0111 (ds寄存器在LDT的位置为2（从0开始）即第三项)

	9. 终端 输入命令，”xp /8w 0x00fd52d0“
		//可以看到LDT表的前4项内容
		//LDT的第三项”0x00003fff	0x10c0f300“ --> 组合出ds的物理地址(基址)：0x10000000
		//先前在ds里偏移是0x3004， 得到线性地址：0x10003004

	10. 终端 输入命令，”calc ds:0x3004“
		//验证找到的是否正确，输出” 0x10003004 268447748 “ 说明找到的地址是正确的
		//0x10003004 = 0001,0000,00  00,0000,0011,  0000,0000,0100   (页目录号(10)，页表号(10)，页内偏移(12))
		//                   64             3              4

	11. 终端 输入命令，”creg“
		//得到“CR3=0x00000000” --> 说明页目录表的基址是0

	12. 终端 输入命令，”xp /w 0 + 64 * 4“
		//得到” 0x00000100 <bogus+       0>:	0x00fa6027“
		//发现页表所在物理页框号为0x00fa6，通过0x00fa6000这个位置来查找3号页表项


	13. 终端 输入命令，”xp /w 0x00fa600 + 4 * 3“
		//得到" 0x00fa600c <bogus+  0>:	0x00fa3067"
		//线性地址0x10003004对应的物理页框号为0x00fa3，和页内偏移0x004接到一起，得到0x00fa3004，这就是变量i的物理地址。

	14. 终端 输入命令，”xp /w 0x00fa3004“
		//得到 0x00fa3004 <bogus+       0>:	0x12345678

	15. 终端 输入命令，”setpmem 0x00fa3004 4 0“
		//现在，通过直接修改内存来改变i的值为0，命令是： setpmem 0x00fa3004 4 0，表示从0x00fa3004地址开始的4个字节都设为0。

	16. 终端 输入命令，”c“
		//继续运行Bochs，发现程序已退出，OK~~


